/*
* Generated by Wasabi. DO NOT EDIT.
* Contains:
*   - independent of program-to-instrument: long.js dependency, Wasabi loader and runtime
*   - generated from program-to-instrument: static information and low-level hooks
*/

const Long = require("./long.cjs")

/*
 * Wasabi loader (monkey-patches WebAssembly.instantiate()) and runtime (e.g., for resolving call_indirect).
 */

let Wasabi = {
  HOOK_NAMES: [
    "start",
    "if_",
    "br",
    "br_if",
    "br_table",
    "begin",
    "end",
    "nop",
    "unreachable",
    "drop",
    "select",
    "call_pre",
    "call_post",
    "return_",
    "const_",
    "unary",
    "binary",
    "load",
    "store",
    "memory_size",
    "memory_grow",
    "local",
    "global",
    "memory_fill",
    "memory_copy",
    "memory_init",
    "table_size",
    "table_copy",
    "table_init",
    "table_get",
    "table_set",
    "table_grow",
    "table_fill",
    "begin_function",
  ],

  // map a table index to a function index
  resolveTableIdx: function (tableIdx, elemIdx) {
    if (
      Wasabi.module.exports === undefined ||
      Wasabi.module.tables[tableIdx] === undefined
    ) {
      // console.warn("Wasabi: cannot resolve table index without module exports and table (possible reason: exports and table are usually not available during execution of the Wasm start function)");
      return undefined;
    }

    const resolvedFunction = Wasabi.module.tables[tableIdx].get(elemIdx);
    if (resolvedFunction === null) {
      // console.warn("Wasabi: resolving indirectly called function failed because table returned `null` at index " + tableIdx);
      return undefined;
    }

    // NOTE We want to get the _index_ of the resolved function to the analysis code, but the
    // WebAssembly API only gives us a _function object_.
    // HACK We can abuse the `.name` property of the function object to get the index.
    // See the MDN, which says the "name property is the toString() result of the function's
    // index in the wasm module".
    // https://developer.mozilla.org/en-US/docs/WebAssembly/Exported_functions
    const resolvedFunctionIdx = parseInt(resolvedFunction.name);

    // However, because we inserted a bunch of imported hook functions into the module, the
    // index retrieved above is in terms of the _instrumented_ module. We want to get the
    // function index in the _original_ module however, so we adjust it here:
    if (
      resolvedFunctionIdx >= Wasabi.module.info.originalFunctionImportsCount
    ) {
      return (
        resolvedFunctionIdx - Object.keys(Wasabi.module.lowlevelHooks).length
      );
    } else {
      return resolvedFunctionIdx;
    }
  },

  // call end hooks for all "intermediate" or "implicitly ended blocks" of a branch table
  endBrTableBlocks: function (brTablesInfoIdx, brTableIdx, func) {
    const table = Wasabi.module.info.brTables[brTablesInfoIdx].table;
    const default_ = Wasabi.module.info.brTables[brTablesInfoIdx].default;
    const target =
      table[brTableIdx] === undefined ? default_ : table[brTableIdx];

    // NOTE this is a JavaScript impl of the Wasabi to_end_hook_args() function in Rust
    for (const block of target.ends) {
      const [type, begin, end, begin_if] = block;
      Wasabi.analysis.end(
        { func, instr: end },
        type,
        { func, instr: begin },
        // not undefined only for block type "else"
        begin_if === undefined ? undefined : { func, instr: begin_if }
      );
    }
  },

  module: {
    // filled at instrumentation time
    // TODO flatten info into module itself, by using Object.assign in generated code
    info: undefined,
    lowlevelHooks: undefined,
    // filled after instantiation
    exports: undefined,
    table: undefined,
  },

  // filled by user or with empty hooks (as fallback) before instantiation
  analysis: {},
};

// monkey-patch WebAssembly.instantiate() and .instantiateStreaming() to add Wasabi
{
  // NOTE even though nothing is done with their arguments, we should provide them because it speeds up in Firefox
  // maybe because this way the JIT can inline the functions???
  const defaultHooks = {
    start(location) {},
    nop(location) {},
    unreachable(location) {},
    if_(location, condition) {},
    br(location, target) {},
    br_if(location, conditionalTarget, condition) {},
    br_table(location, table, defaultTarget, tableIdx) {},
    begin(location, type) {},
    end(location, type, beginLocation, ifLocation) {},
    drop(location, value) {},
    select(location, cond, first, second) {},
    call_pre(location, targetFunc, args, indirectTableIdx) {},
    call_post(location, values) {},
    return_(location, values) {},
    const_(location, op, value) {},
    unary(location, op, input, result) {},
    binary(location, op, first, second, result) {},
    load(location, op, memarg, value) {},
    store(location, op, memarg, value) {},
    memory_size(location, memoryIdx, currentSizePages) {},
    memory_grow(location, memoryIdx, byPages, previousSizePages) {},
    local(location, op, localIndex, value) {},
    global(location, op, globalIndex, value) {},
    memory_fill(location, index, value, length) {},
    memory_copy(location, destination, source, length) {},
    memory_init(location, destination, source, length) {},
    table_size(location, currentSizeEntries) {},
    table_copy(location, destination, source, length) {},
    table_init(location, destination, source, length) {},
    table_get(location, index, value) {},
    table_set(location, index, value) {},
    table_grow(location, n, val, previusElement) {},
    table_fill(location, index, value, length) {},
    begin_function(location, args) {},
  };

  const assertInstantiationPrecondition = function () {
    if (
      Wasabi.module.info === undefined ||
      Wasabi.module.lowlevelHooks === undefined
    ) {
      throw "missing static info or low-level hooks, did you include the Wasabi-generated JavaScript file?";
    }
  };

  const importObjectWithHooks = function (importObject) {
    for (const hook of Wasabi.HOOK_NAMES) {
      if (Wasabi.analysis[hook] === undefined) {
        // console.debug("Wasabi: hook", hook, "not provided by Wasabi.analysis, I will use an empty function as a fallback");
        Wasabi.analysis[hook] = defaultHooks[hook];
      }
    }
    let importObjectWithHooks = importObject || {};
    importObjectWithHooks.__wasabi_hooks = Wasabi.module.lowlevelHooks;
    return importObjectWithHooks;
  };

  const wireInstanceExports = function (instance) {
    Wasabi.module.exports = instance.exports;
    Wasabi.module.tables = [];
    Wasabi.module.memories = [];
    Wasabi.module.globals = [];
    for (let exp in instance.exports) {
      if (Wasabi.module.info.tableExportNames.includes(exp)) {
        Wasabi.module.tables.push(instance.exports[exp]);
      }
      if (Wasabi.module.info.memoryExportNames.includes(exp)) {
        Wasabi.module.memories.push(instance.exports[exp]);
      }
      if (Wasabi.module.info.globalExportNames.includes(exp)) {
        Wasabi.module.globals.push(instance.exports[exp]);
      }
    }
    // Wasabi.module.tables = Object.fromEntries(Object.entries(instance.exports).filter(([key]) => Wasabi.module.info.tableExportNames.includes(key)));
    // Wasabi.module.memories = Object.fromEntries(Object.entries(instance.exports).filter(([key]) => Wasabi.module.info.memoryExportNames.includes(key)));
  };

  const oldInstantiate = WebAssembly.instantiate;
  WebAssembly.instantiate = (sourceBuffer, importObject) => {
    assertInstantiationPrecondition();
    const result = oldInstantiate(
      sourceBuffer,
      importObjectWithHooks(importObject)
    );
    // as soon as instance is available, save exports and table
    result.then(({ module, instance }) => {
      wireInstanceExports(instance);
    });

    WebAssembly.instantiate = oldInstantiate;
    // FIXME Due to the added imports of __wasabi functions, host code that mutates the table
    // might insert the wrong numerical index into the table.
    // We could at least detect (and warn that this changes behavior), or fix it, by wrapping
    // the exported table in a proxy object, that adapts the inserted get/set calls accordingly.

    return result;
  };

  // just fall-back to regular instantiation since Wasabi doesn't support streaming instrumentation (yet) anyway
  const oldInstantiateStreaming = WebAssembly.instantiateStreaming;
  WebAssembly.instantiateStreaming = async (source, importObject) => {
    let response = await source;
    let buffer = await response.arrayBuffer();
    return WebAssembly.instantiate(buffer, importObject);
  };

  const oldInstance = WebAssembly.Instance;
  const newInstance = function (module, importObject) {
    assertInstantiationPrecondition();
    const instance = new oldInstance(
      module,
      importObjectWithHooks(importObject)
    );
    wireInstanceExports(instance);
    return instance;
  };
  WebAssembly.Instance = newInstance;
}

Wasabi.module.info = {"functions":[{"type":"i|","import":["__wbindgen_placeholder__","__wbindgen_object_drop_ref"],"export":[],"locals":"","instrCount":0},{"type":"ii|i","import":["__wbindgen_placeholder__","__wbindgen_string_new"],"export":[],"locals":"","instrCount":0},{"type":"i|i","import":["__wbindgen_placeholder__","__wbindgen_cb_drop"],"export":[],"locals":"","instrCount":0},{"type":"i|i","import":["__wbindgen_placeholder__","__wbg_body_674aec4c1c0910cd"],"export":[],"locals":"","instrCount":0},{"type":"iii|i","import":["__wbindgen_placeholder__","__wbg_createElement_4891554b28d3388b"],"export":[],"locals":"","instrCount":0},{"type":"iii|i","import":["__wbindgen_placeholder__","__wbg_getElementById_cc0e0d931b0d9a28"],"export":[],"locals":"","instrCount":0},{"type":"iii|i","import":["__wbindgen_placeholder__","__wbg_querySelectorAll_c03e8664a5a0f0c5"],"export":[],"locals":"","instrCount":0},{"type":"i|i","import":["__wbindgen_placeholder__","__wbg_instanceof_Window_9029196b662bc42a"],"export":[],"locals":"","instrCount":0},{"type":"i|i","import":["__wbindgen_placeholder__","__wbg_document_f7ace2b956f30a4f"],"export":[],"locals":"","instrCount":0},{"type":"iii|","import":["__wbindgen_placeholder__","__wbg_setclassName_e7c93281fe6d80d6"],"export":[],"locals":"","instrCount":0},{"type":"i|i","import":["__wbindgen_placeholder__","__wbg_classList_5f2fc1d67656292e"],"export":[],"locals":"","instrCount":0},{"type":"iiiii|","import":["__wbindgen_placeholder__","__wbg_setAttribute_e7e80b478b7b8b2f"],"export":[],"locals":"","instrCount":0},{"type":"i|","import":["__wbindgen_placeholder__","__wbg_remove_48288e91662163dc"],"export":[],"locals":"","instrCount":0},{"type":"i|i","import":["__wbindgen_placeholder__","__wbg_instanceof_HtmlElement_6f4725d4677c7968"],"export":[],"locals":"","instrCount":0},{"type":"iii|","import":["__wbindgen_placeholder__","__wbg_setinnerText_1849424c2fdc16ec"],"export":[],"locals":"","instrCount":0},{"type":"ii|","import":["__wbindgen_placeholder__","__wbg_setonclick_4e9c9187dbc33082"],"export":[],"locals":"","instrCount":0},{"type":"i|","import":["__wbindgen_placeholder__","__wbg_log_1d3ae0273d8f4f8a"],"export":[],"locals":"","instrCount":0},{"type":"iii|","import":["__wbindgen_placeholder__","__wbg_add_3eafedc4b2a28db0"],"export":[],"locals":"","instrCount":0},{"type":"i|i","import":["__wbindgen_placeholder__","__wbg_length_7aeee1534dbcb390"],"export":[],"locals":"","instrCount":0},{"type":"ii|i","import":["__wbindgen_placeholder__","__wbg_item_b62bdb2beca1393f"],"export":[],"locals":"","instrCount":0},{"type":"ii|i","import":["__wbindgen_placeholder__","__wbg_appendChild_51339d4cde00ee22"],"export":[],"locals":"","instrCount":0},{"type":"ii|i","import":["__wbindgen_placeholder__","__wbg_newnoargs_581967eacc0e2604"],"export":[],"locals":"","instrCount":0},{"type":"ii|i","import":["__wbindgen_placeholder__","__wbg_call_cb65541d95d71282"],"export":[],"locals":"","instrCount":0},{"type":"i|i","import":["__wbindgen_placeholder__","__wbindgen_object_clone_ref"],"export":[],"locals":"","instrCount":0},{"type":"|i","import":["__wbindgen_placeholder__","__wbg_self_1ff1d729e9aae938"],"export":[],"locals":"","instrCount":0},{"type":"|i","import":["__wbindgen_placeholder__","__wbg_window_5f4faef6c12b79ec"],"export":[],"locals":"","instrCount":0},{"type":"|i","import":["__wbindgen_placeholder__","__wbg_globalThis_1d39714405582d3c"],"export":[],"locals":"","instrCount":0},{"type":"|i","import":["__wbindgen_placeholder__","__wbg_global_651f05c6a0944d1c"],"export":[],"locals":"","instrCount":0},{"type":"i|i","import":["__wbindgen_placeholder__","__wbindgen_is_undefined"],"export":[],"locals":"","instrCount":0},{"type":"|F","import":["__wbindgen_placeholder__","__wbg_random_5f61cd0d6777a993"],"export":[],"locals":"","instrCount":0},{"type":"ii|","import":["__wbindgen_placeholder__","__wbindgen_debug_string"],"export":[],"locals":"","instrCount":0},{"type":"ii|","import":["__wbindgen_placeholder__","__wbindgen_throw"],"export":[],"locals":"","instrCount":0},{"type":"i|","import":["__wbindgen_placeholder__","__wbindgen_rethrow"],"export":[],"locals":"","instrCount":0},{"type":"iii|i","import":["__wbindgen_placeholder__","__wbindgen_closure_wrapper56"],"export":[],"locals":"","instrCount":0},{"type":"i|i","import":null,"export":[],"locals":"iiiiiiiiiiiiiiiI","instrCount":1805},{"type":"i|","import":null,"export":[],"locals":"iiiiiii","instrCount":814},{"type":"i|","import":null,"export":[],"locals":"iiiiiiiiiF","instrCount":641},{"type":"i|","import":null,"export":[],"locals":"iiiii","instrCount":423},{"type":"iiii|i","import":null,"export":[],"locals":"","instrCount":481},{"type":"ii|i","import":null,"export":[],"locals":"iiiiiiii","instrCount":492},{"type":"iii|i","import":null,"export":[],"locals":"iiiiiiii","instrCount":489},{"type":"iiiii|i","import":null,"export":[],"locals":"iiiiiiii","instrCount":381},{"type":"iii|","import":null,"export":[],"locals":"iiiii","instrCount":676},{"type":"i|","import":null,"export":[],"locals":"iiiiiiiii","instrCount":361},{"type":"iiii|","import":null,"export":[],"locals":"iii","instrCount":344},{"type":"|","import":null,"export":["main","__wbindgen_start"],"locals":"iiiiiiiiiiiiiiii","instrCount":1189},{"type":"iii|i","import":null,"export":[],"locals":"iiiiiiiiii","instrCount":315},{"type":"i|","import":null,"export":[],"locals":"iiiiii","instrCount":281},{"type":"ii|","import":null,"export":[],"locals":"iiii","instrCount":269},{"type":"iiii|","import":null,"export":[],"locals":"iiiii","instrCount":260},{"type":"ii|","import":null,"export":[],"locals":"iiiiiii","instrCount":225},{"type":"ii|i","import":null,"export":[],"locals":"iiiii","instrCount":194},{"type":"ii|","import":null,"export":[],"locals":"iiii","instrCount":229},{"type":"iiiii|","import":null,"export":[],"locals":"ii","instrCount":189},{"type":"iiiiiii|i","import":null,"export":[],"locals":"iiiiiii","instrCount":229},{"type":"ii|i","import":null,"export":[],"locals":"iiiii","instrCount":272},{"type":"Ii|i","import":null,"export":[],"locals":"iiiiiI","instrCount":161},{"type":"ii|i","import":null,"export":[],"locals":"iii","instrCount":159},{"type":"i|","import":null,"export":[],"locals":"iiiiii","instrCount":148},{"type":"i|","import":null,"export":[],"locals":"iiiii","instrCount":155},{"type":"ii|","import":null,"export":[],"locals":"iiii","instrCount":145},{"type":"ii|i","import":null,"export":[],"locals":"iiiiiii","instrCount":156},{"type":"|i","import":null,"export":[],"locals":"iiiiiiiiiiii","instrCount":40},{"type":"ii|","import":null,"export":[],"locals":"iiiiI","instrCount":116},{"type":"ii|","import":null,"export":[],"locals":"iiii","instrCount":110},{"type":"iiii|","import":null,"export":[],"locals":"","instrCount":102},{"type":"iii|","import":null,"export":[],"locals":"ii","instrCount":105},{"type":"iii|","import":null,"export":[],"locals":"ii","instrCount":105},{"type":"iiiii|","import":null,"export":[],"locals":"ii","instrCount":96},{"type":"iiii|","import":null,"export":[],"locals":"i","instrCount":86},{"type":"iiiiii|","import":null,"export":[],"locals":"i","instrCount":77},{"type":"ii|i","import":null,"export":[],"locals":"iii","instrCount":108},{"type":"ii|","import":null,"export":[],"locals":"iiiI","instrCount":69},{"type":"iiiii|","import":null,"export":[],"locals":"i","instrCount":58},{"type":"iii|","import":null,"export":[],"locals":"i","instrCount":50},{"type":"iii|","import":null,"export":[],"locals":"i","instrCount":50},{"type":"iii|","import":null,"export":[],"locals":"i","instrCount":50},{"type":"ii|i","import":null,"export":[],"locals":"iii","instrCount":52},{"type":"ii|i","import":null,"export":[],"locals":"i","instrCount":44},{"type":"ii|i","import":null,"export":[],"locals":"i","instrCount":44},{"type":"ii|","import":null,"export":[],"locals":"i","instrCount":177},{"type":"ii|","import":null,"export":[],"locals":"","instrCount":47},{"type":"iii|","import":null,"export":[],"locals":"i","instrCount":42},{"type":"i|","import":null,"export":[],"locals":"i","instrCount":33},{"type":"i|","import":null,"export":[],"locals":"i","instrCount":35},{"type":"iii|","import":null,"export":[],"locals":"ii","instrCount":34},{"type":"iii|i","import":null,"export":[],"locals":"i","instrCount":34},{"type":"iii|i","import":null,"export":[],"locals":"i","instrCount":34},{"type":"ii|","import":null,"export":[],"locals":"ii","instrCount":33},{"type":"iii|","import":null,"export":[],"locals":"i","instrCount":32},{"type":"iiii|","import":null,"export":[],"locals":"i","instrCount":31},{"type":"ii|i","import":null,"export":["__wbindgen_malloc"],"locals":"","instrCount":29},{"type":"iiii|","import":null,"export":[],"locals":"i","instrCount":29},{"type":"iiiii|i","import":null,"export":[],"locals":"","instrCount":28},{"type":"|","import":null,"export":[],"locals":"i","instrCount":26},{"type":"ii|","import":null,"export":[],"locals":"ii","instrCount":135},{"type":"i|","import":null,"export":[],"locals":"i","instrCount":25},{"type":"iiii|i","import":null,"export":["__wbindgen_realloc"],"locals":"","instrCount":25},{"type":"ii|i","import":null,"export":[],"locals":"iiiiiiiiiiiii","instrCount":400},{"type":"i|","import":null,"export":[],"locals":"iiiiiii","instrCount":217},{"type":"ii|","import":null,"export":[],"locals":"","instrCount":20},{"type":"i|","import":null,"export":[],"locals":"i","instrCount":19},{"type":"ii|","import":null,"export":[],"locals":"","instrCount":19},{"type":"i|","import":null,"export":[],"locals":"ii","instrCount":19},{"type":"i|","import":null,"export":[],"locals":"i","instrCount":16},{"type":"i|","import":null,"export":[],"locals":"i","instrCount":17},{"type":"iii|","import":null,"export":[],"locals":"","instrCount":17},{"type":"iiiiii|i","import":null,"export":[],"locals":"","instrCount":16},{"type":"ii|","import":null,"export":[],"locals":"","instrCount":16},{"type":"iiiii|i","import":null,"export":[],"locals":"","instrCount":15},{"type":"iiiii|","import":null,"export":[],"locals":"","instrCount":15},{"type":"iiIii|","import":null,"export":[],"locals":"","instrCount":15},{"type":"iiFii|","import":null,"export":[],"locals":"","instrCount":15},{"type":"iifii|","import":null,"export":[],"locals":"","instrCount":15},{"type":"ii|","import":null,"export":[],"locals":"","instrCount":15},{"type":"iiii|","import":null,"export":[],"locals":"","instrCount":14},{"type":"iiii|","import":null,"export":[],"locals":"","instrCount":14},{"type":"i|","import":null,"export":[],"locals":"","instrCount":10},{"type":"iii|i","import":null,"export":[],"locals":"","instrCount":13},{"type":"ii|","import":null,"export":["wasm_bindgen__convert__closures__invoke0_mut__h1724e384771b2afc"],"locals":"","instrCount":12},{"type":"ii|","import":null,"export":[],"locals":"","instrCount":12},{"type":"i|i","import":null,"export":[],"locals":"i","instrCount":12},{"type":"ii|i","import":null,"export":[],"locals":"","instrCount":11},{"type":"i|i","import":null,"export":[],"locals":"","instrCount":11},{"type":"ii|","import":null,"export":[],"locals":"","instrCount":11},{"type":"ii|i","import":null,"export":[],"locals":"","instrCount":11},{"type":"i|","import":null,"export":[],"locals":"","instrCount":10},{"type":"ii|i","import":null,"export":[],"locals":"","instrCount":10},{"type":"iiii|i","import":null,"export":[],"locals":"iiiiii","instrCount":394},{"type":"i|i","import":null,"export":[],"locals":"","instrCount":9},{"type":"ii|i","import":null,"export":[],"locals":"","instrCount":9},{"type":"ii|i","import":null,"export":[],"locals":"","instrCount":8},{"type":"iiiii|","import":null,"export":[],"locals":"iiiii","instrCount":591},{"type":"ii|i","import":null,"export":[],"locals":"","instrCount":7},{"type":"ii|i","import":null,"export":[],"locals":"iiiiiiiiiiiiiiiI","instrCount":461},{"type":"ii|i","import":null,"export":[],"locals":"","instrCount":7},{"type":"ii|i","import":null,"export":[],"locals":"","instrCount":14},{"type":"i|","import":null,"export":["__wbindgen_exn_store"],"locals":"","instrCount":7},{"type":"ii|","import":null,"export":[],"locals":"","instrCount":7},{"type":"ii|","import":null,"export":[],"locals":"","instrCount":7},{"type":"ii|","import":null,"export":[],"locals":"","instrCount":7},{"type":"ii|","import":null,"export":[],"locals":"","instrCount":7},{"type":"i|i","import":null,"export":[],"locals":"","instrCount":7},{"type":"ii|i","import":null,"export":[],"locals":"","instrCount":7},{"type":"iii|","import":null,"export":[],"locals":"","instrCount":6},{"type":"i|i","import":null,"export":[],"locals":"","instrCount":6},{"type":"iii|","import":null,"export":[],"locals":"","instrCount":6},{"type":"i|i","import":null,"export":[],"locals":"","instrCount":6},{"type":"i|i","import":null,"export":[],"locals":"","instrCount":6},{"type":"ii|","import":null,"export":[],"locals":"","instrCount":6},{"type":"i|i","import":null,"export":[],"locals":"","instrCount":6},{"type":"ii|i","import":null,"export":[],"locals":"iiiii","instrCount":272},{"type":"ii|i","import":null,"export":[],"locals":"","instrCount":8},{"type":"ii|i","import":null,"export":[],"locals":"","instrCount":5},{"type":"ii|i","import":null,"export":[],"locals":"","instrCount":5},{"type":"ii|i","import":null,"export":[],"locals":"","instrCount":18},{"type":"i|","import":null,"export":[],"locals":"","instrCount":5},{"type":"i|i","import":null,"export":[],"locals":"","instrCount":5},{"type":"i|i","import":null,"export":[],"locals":"","instrCount":5},{"type":"i|i","import":null,"export":[],"locals":"","instrCount":5},{"type":"i|i","import":null,"export":[],"locals":"","instrCount":5},{"type":"ii|","import":null,"export":[],"locals":"","instrCount":11},{"type":"iii|i","import":null,"export":[],"locals":"","instrCount":5},{"type":"iii|i","import":null,"export":[],"locals":"iiiiiii","instrCount":173},{"type":"i|i","import":null,"export":[],"locals":"","instrCount":4},{"type":"i|","import":null,"export":[],"locals":"","instrCount":4},{"type":"|i","import":null,"export":[],"locals":"","instrCount":4},{"type":"ii|i","import":null,"export":[],"locals":"","instrCount":4},{"type":"ii|i","import":null,"export":[],"locals":"","instrCount":4},{"type":"i|i","import":null,"export":[],"locals":"","instrCount":4},{"type":"i|i","import":null,"export":[],"locals":"","instrCount":4},{"type":"i|","import":null,"export":[],"locals":"","instrCount":2}],"globals":[{"import":null,"export":["__wasabi_global0"],"valType":"i32"}],"start":null,"tables":[{"import":null,"export":["__wbindgen_export_2"],"refType":"funcref"}],"memories":[{"import":null,"export":["memory"]}],"tableExportNames":["__wbindgen_export_2"],"memoryExportNames":["memory"],"globalExportNames":["__wasabi_global0"],"brTables":[{"table":[{"label":4,"location":[44,100],"ends":[["block",57,61],["block",56,80],["if",13,88],["block",10,94],["block",9,100]]},{"label":0,"location":[44,61],"ends":[["block",57,61]]}],"default":{"label":1,"location":[44,80],"ends":[["block",57,61],["block",56,80]]}},{"table":[{"label":0,"location":[95,66],"ends":[["block",62,66]]},{"label":1,"location":[95,73],"ends":[["block",62,66],["block",61,73]]}],"default":{"label":3,"location":[95,103],"ends":[["block",62,66],["block",61,73],["block",60,83],["block",59,103]]}},{"table":[{"label":0,"location":[38,16],"ends":[["block",13,16]]},{"label":1,"location":[38,19],"ends":[["block",13,16],["block",12,19]]},{"label":2,"location":[38,22],"ends":[["block",13,16],["block",12,19],["block",11,22]]}],"default":{"label":13,"location":[38,474],"ends":[["block",13,16],["block",12,19],["block",11,22],["block",10,25],["block",9,82],["block",8,119],["block",7,174],["block",6,211],["block",5,283],["block",4,322],["block",3,377],["block",2,416],["block",1,471],["block",0,474]]}},{"table":[{"label":2,"location":[38,25],"ends":[["block",12,19],["block",11,22],["block",10,25]]},{"label":3,"location":[38,82],"ends":[["block",12,19],["block",11,22],["block",10,25],["block",9,82]]},{"label":4,"location":[38,119],"ends":[["block",12,19],["block",11,22],["block",10,25],["block",9,82],["block",8,119]]}],"default":{"label":12,"location":[38,474],"ends":[["block",12,19],["block",11,22],["block",10,25],["block",9,82],["block",8,119],["block",7,174],["block",6,211],["block",5,283],["block",4,322],["block",3,377],["block",2,416],["block",1,471],["block",0,474]]}},{"table":[{"label":4,"location":[38,174],"ends":[["block",11,22],["block",10,25],["block",9,82],["block",8,119],["block",7,174]]},{"label":5,"location":[38,211],"ends":[["block",11,22],["block",10,25],["block",9,82],["block",8,119],["block",7,174],["block",6,211]]},{"label":6,"location":[38,283],"ends":[["block",11,22],["block",10,25],["block",9,82],["block",8,119],["block",7,174],["block",6,211],["block",5,283]]}],"default":{"label":11,"location":[38,474],"ends":[["block",11,22],["block",10,25],["block",9,82],["block",8,119],["block",7,174],["block",6,211],["block",5,283],["block",4,322],["block",3,377],["block",2,416],["block",1,471],["block",0,474]]}},{"table":[{"label":6,"location":[38,322],"ends":[["block",10,25],["block",9,82],["block",8,119],["block",7,174],["block",6,211],["block",5,283],["block",4,322]]},{"label":7,"location":[38,377],"ends":[["block",10,25],["block",9,82],["block",8,119],["block",7,174],["block",6,211],["block",5,283],["block",4,322],["block",3,377]]},{"label":8,"location":[38,416],"ends":[["block",10,25],["block",9,82],["block",8,119],["block",7,174],["block",6,211],["block",5,283],["block",4,322],["block",3,377],["block",2,416]]}],"default":{"label":10,"location":[38,474],"ends":[["block",10,25],["block",9,82],["block",8,119],["block",7,174],["block",6,211],["block",5,283],["block",4,322],["block",3,377],["block",2,416],["block",1,471],["block",0,474]]}},{"table":[{"label":0,"location":[46,189],"ends":[["block",181,189]]},{"label":2,"location":[46,207],"ends":[["block",181,189],["block",180,204],["block",179,207]]}],"default":{"label":1,"location":[46,204],"ends":[["block",181,189],["block",180,204]]}},{"table":[{"label":0,"location":[46,227],"ends":[["block",221,227]]},{"label":2,"location":[46,245],"ends":[["block",221,227],["block",220,242],["block",219,245]]}],"default":{"label":1,"location":[46,242],"ends":[["block",221,227],["block",220,242]]}},{"table":[{"label":5,"location":[42,67],"ends":[["block",14,17],["block",13,23],["block",12,34],["block",11,45],["block",10,56],["block",9,67]]},{"label":8,"location":[42,110],"ends":[["block",14,17],["block",13,23],["block",12,34],["block",11,45],["block",10,56],["block",9,67],["block",8,78],["block",7,94],["block",6,110]]},{"label":8,"location":[42,110],"ends":[["block",14,17],["block",13,23],["block",12,34],["block",11,45],["block",10,56],["block",9,67],["block",8,78],["block",7,94],["block",6,110]]},{"label":8,"location":[42,110],"ends":[["block",14,17],["block",13,23],["block",12,34],["block",11,45],["block",10,56],["block",9,67],["block",8,78],["block",7,94],["block",6,110]]},{"label":8,"location":[42,110],"ends":[["block",14,17],["block",13,23],["block",12,34],["block",11,45],["block",10,56],["block",9,67],["block",8,78],["block",7,94],["block",6,110]]},{"label":8,"location":[42,110],"ends":[["block",14,17],["block",13,23],["block",12,34],["block",11,45],["block",10,56],["block",9,67],["block",8,78],["block",7,94],["block",6,110]]},{"label":8,"location":[42,110],"ends":[["block",14,17],["block",13,23],["block",12,34],["block",11,45],["block",10,56],["block",9,67],["block",8,78],["block",7,94],["block",6,110]]},{"label":8,"location":[42,110],"ends":[["block",14,17],["block",13,23],["block",12,34],["block",11,45],["block",10,56],["block",9,67],["block",8,78],["block",7,94],["block",6,110]]},{"label":8,"location":[42,110],"ends":[["block",14,17],["block",13,23],["block",12,34],["block",11,45],["block",10,56],["block",9,67],["block",8,78],["block",7,94],["block",6,110]]},{"label":1,"location":[42,23],"ends":[["block",14,17],["block",13,23]]},{"label":3,"location":[42,45],"ends":[["block",14,17],["block",13,23],["block",12,34],["block",11,45]]},{"label":8,"location":[42,110],"ends":[["block",14,17],["block",13,23],["block",12,34],["block",11,45],["block",10,56],["block",9,67],["block",8,78],["block",7,94],["block",6,110]]},{"label":8,"location":[42,110],"ends":[["block",14,17],["block",13,23],["block",12,34],["block",11,45],["block",10,56],["block",9,67],["block",8,78],["block",7,94],["block",6,110]]},{"label":2,"location":[42,34],"ends":[["block",14,17],["block",13,23],["block",12,34]]},{"label":8,"location":[42,110],"ends":[["block",14,17],["block",13,23],["block",12,34],["block",11,45],["block",10,56],["block",9,67],["block",8,78],["block",7,94],["block",6,110]]},{"label":8,"location":[42,110],"ends":[["block",14,17],["block",13,23],["block",12,34],["block",11,45],["block",10,56],["block",9,67],["block",8,78],["block",7,94],["block",6,110]]},{"label":8,"location":[42,110],"ends":[["block",14,17],["block",13,23],["block",12,34],["block",11,45],["block",10,56],["block",9,67],["block",8,78],["block",7,94],["block",6,110]]},{"label":8,"location":[42,110],"ends":[["block",14,17],["block",13,23],["block",12,34],["block",11,45],["block",10,56],["block",9,67],["block",8,78],["block",7,94],["block",6,110]]},{"label":8,"location":[42,110],"ends":[["block",14,17],["block",13,23],["block",12,34],["block",11,45],["block",10,56],["block",9,67],["block",8,78],["block",7,94],["block",6,110]]},{"label":8,"location":[42,110],"ends":[["block",14,17],["block",13,23],["block",12,34],["block",11,45],["block",10,56],["block",9,67],["block",8,78],["block",7,94],["block",6,110]]},{"label":8,"location":[42,110],"ends":[["block",14,17],["block",13,23],["block",12,34],["block",11,45],["block",10,56],["block",9,67],["block",8,78],["block",7,94],["block",6,110]]},{"label":8,"location":[42,110],"ends":[["block",14,17],["block",13,23],["block",12,34],["block",11,45],["block",10,56],["block",9,67],["block",8,78],["block",7,94],["block",6,110]]},{"label":8,"location":[42,110],"ends":[["block",14,17],["block",13,23],["block",12,34],["block",11,45],["block",10,56],["block",9,67],["block",8,78],["block",7,94],["block",6,110]]},{"label":8,"location":[42,110],"ends":[["block",14,17],["block",13,23],["block",12,34],["block",11,45],["block",10,56],["block",9,67],["block",8,78],["block",7,94],["block",6,110]]},{"label":8,"location":[42,110],"ends":[["block",14,17],["block",13,23],["block",12,34],["block",11,45],["block",10,56],["block",9,67],["block",8,78],["block",7,94],["block",6,110]]},{"label":8,"location":[42,110],"ends":[["block",14,17],["block",13,23],["block",12,34],["block",11,45],["block",10,56],["block",9,67],["block",8,78],["block",7,94],["block",6,110]]},{"label":8,"location":[42,110],"ends":[["block",14,17],["block",13,23],["block",12,34],["block",11,45],["block",10,56],["block",9,67],["block",8,78],["block",7,94],["block",6,110]]},{"label":8,"location":[42,110],"ends":[["block",14,17],["block",13,23],["block",12,34],["block",11,45],["block",10,56],["block",9,67],["block",8,78],["block",7,94],["block",6,110]]},{"label":8,"location":[42,110],"ends":[["block",14,17],["block",13,23],["block",12,34],["block",11,45],["block",10,56],["block",9,67],["block",8,78],["block",7,94],["block",6,110]]},{"label":8,"location":[42,110],"ends":[["block",14,17],["block",13,23],["block",12,34],["block",11,45],["block",10,56],["block",9,67],["block",8,78],["block",7,94],["block",6,110]]},{"label":8,"location":[42,110],"ends":[["block",14,17],["block",13,23],["block",12,34],["block",11,45],["block",10,56],["block",9,67],["block",8,78],["block",7,94],["block",6,110]]},{"label":8,"location":[42,110],"ends":[["block",14,17],["block",13,23],["block",12,34],["block",11,45],["block",10,56],["block",9,67],["block",8,78],["block",7,94],["block",6,110]]},{"label":8,"location":[42,110],"ends":[["block",14,17],["block",13,23],["block",12,34],["block",11,45],["block",10,56],["block",9,67],["block",8,78],["block",7,94],["block",6,110]]},{"label":8,"location":[42,110],"ends":[["block",14,17],["block",13,23],["block",12,34],["block",11,45],["block",10,56],["block",9,67],["block",8,78],["block",7,94],["block",6,110]]},{"label":6,"location":[42,78],"ends":[["block",14,17],["block",13,23],["block",12,34],["block",11,45],["block",10,56],["block",9,67],["block",8,78]]},{"label":8,"location":[42,110],"ends":[["block",14,17],["block",13,23],["block",12,34],["block",11,45],["block",10,56],["block",9,67],["block",8,78],["block",7,94],["block",6,110]]},{"label":8,"location":[42,110],"ends":[["block",14,17],["block",13,23],["block",12,34],["block",11,45],["block",10,56],["block",9,67],["block",8,78],["block",7,94],["block",6,110]]},{"label":8,"location":[42,110],"ends":[["block",14,17],["block",13,23],["block",12,34],["block",11,45],["block",10,56],["block",9,67],["block",8,78],["block",7,94],["block",6,110]]},{"label":8,"location":[42,110],"ends":[["block",14,17],["block",13,23],["block",12,34],["block",11,45],["block",10,56],["block",9,67],["block",8,78],["block",7,94],["block",6,110]]},{"label":7,"location":[42,94],"ends":[["block",14,17],["block",13,23],["block",12,34],["block",11,45],["block",10,56],["block",9,67],["block",8,78],["block",7,94]]}],"default":{"label":0,"location":[42,17],"ends":[["block",14,17]]}},{"table":[{"label":0,"location":[40,363],"ends":[["block",357,363]]},{"label":1,"location":[40,369],"ends":[["block",357,363],["block",356,369]]}],"default":{"label":2,"location":[40,380],"ends":[["block",357,363],["block",356,369],["block",355,380]]}},{"table":[{"label":2,"location":[52,181],"ends":[["block",133,137],["block",132,174],["block",131,181]]},{"label":0,"location":[52,137],"ends":[["block",133,137]]}],"default":{"label":1,"location":[52,174],"ends":[["block",133,137],["block",132,174]]}},{"table":[{"label":0,"location":[41,268],"ends":[["block",261,268]]},{"label":1,"location":[41,274],"ends":[["block",261,268],["block",260,274]]},{"label":0,"location":[41,268],"ends":[["block",261,268]]}],"default":{"label":2,"location":[41,285],"ends":[["block",261,268],["block",260,274],["block",259,285]]}}],"originalFunctionImportsCount":34};

Wasabi.module.lowlevelHooks = {
"begin_function_iii": function (func, instr, arg0, arg1, arg2) {
    Wasabi.analysis.begin_function({func, instr}, [arg0, arg1, arg2]);
},
"local_get_i": function (func, instr, index, value) {
    Wasabi.analysis.local({func, instr}, "local.get", index, value);
},
"begin_function_i": function (func, instr, arg0) {
    Wasabi.analysis.begin_function({func, instr}, [arg0]);
},
"begin_function_ii": function (func, instr, arg0, arg1) {
    Wasabi.analysis.begin_function({func, instr}, [arg0, arg1]);
},
"global_get_i": function (func, instr, index, value) {
    Wasabi.analysis.global({func, instr}, "global.get", index, value);
},
"begin_block": function (func, instr, ) {
    Wasabi.analysis.begin({func, instr}, "block");
},
"i32_load": function (func, instr, memIdx, offset, align, addr, value) {
    Wasabi.analysis.load({func, instr}, "i32.load", {memIdx, addr}, {offset, align}, value);
},
"i32_load8_u": function (func, instr, memIdx, offset, align, addr, value) {
    Wasabi.analysis.load({func, instr}, "i32.load8_u", {memIdx, addr}, {offset, align}, value);
},
"i32_eqz": function (func, instr, input0, result0) {
    Wasabi.analysis.unary({func, instr}, "i32.eqz", input0, result0);
},
"if": function (func, instr, condition) {
    Wasabi.analysis.if_({func, instr}, condition !== 0);
},
"begin_if": function (func, instr, ) {
    Wasabi.analysis.begin({func, instr}, "if");
},
"i32_const": function (func, instr, value) {
    Wasabi.analysis.const_({func, instr}, "i32.const", value);
},
"i32_shl": function (func, instr, input0, input1, result0) {
    Wasabi.analysis.binary({func, instr}, "i32.shl", input0, input1, result0);
},
"local_tee_i": function (func, instr, index, value) {
    Wasabi.analysis.local({func, instr}, "local.tee", index, value);
},
"drop_i": function (func, instr, value) {
    Wasabi.analysis.drop({func, instr}, value);
},
"begin_loop": function (func, instr, ) {
    Wasabi.analysis.begin({func, instr}, "loop");
},
"br": function (func, instr, targetLabel, targetInstr) {
    Wasabi.analysis.br({func, instr}, {label: targetLabel, location: {func, instr: targetInstr}});
},
"end_loop": function (func, instr, beginInstr) {
    Wasabi.analysis.end({func, instr}, "loop", {func, instr: beginInstr});
},
"i32_sub": function (func, instr, input0, input1, result0) {
    Wasabi.analysis.binary({func, instr}, "i32.sub", input0, input1, result0);
},
"global_set_i": function (func, instr, index, value) {
    Wasabi.analysis.global({func, instr}, "global.set", index, value);
},
"unreachable": function (func, instr, ) {
    Wasabi.analysis.unreachable({func, instr}, );
},
"i32_gt_u": function (func, instr, input0, input1, result0) {
    Wasabi.analysis.binary({func, instr}, "i32.gt_u", input0, input1, result0);
},
"select_ii": function (func, instr, condition, input0, input1) {
    Wasabi.analysis.select({func, instr}, condition !== 0, input0, input1);
},
"call_indirect_ii": function (func, instr, tableIdx, elemIdx, arg0, arg1) {
    Wasabi.analysis.call_pre({func, instr}, "call_indirect", Wasabi.resolveTableIdx(tableIdx, elemIdx), [arg0, arg1], {tableIdx, elemIdx});
},
"call_post": function (func, instr, ) {
    Wasabi.analysis.call_post({func, instr}, []);
},
"i32_or": function (func, instr, input0, input1, result0) {
    Wasabi.analysis.binary({func, instr}, "i32.or", input0, input1, result0);
},
"return_i": function (func, instr, result0) {
    Wasabi.analysis.return_({func, instr}, [result0]);
},
"end_function": function (func, instr, ) {
    Wasabi.analysis.end({func, instr}, "function", {func, instr: -1});
},
"return": function (func, instr, ) {
    Wasabi.analysis.return_({func, instr}, []);
},
"call_iii": function (func, instr, targetFunc, arg0, arg1, arg2) {
    Wasabi.analysis.call_pre({func, instr}, "call", targetFunc, [arg0, arg1, arg2]);
},
"call_post_i": function (func, instr, result0) {
    Wasabi.analysis.call_post({func, instr}, [result0]);
},
"end_if": function (func, instr, beginInstr) {
    Wasabi.analysis.end({func, instr}, "if", {func, instr: beginInstr});
},
"i32_add": function (func, instr, input0, input1, result0) {
    Wasabi.analysis.binary({func, instr}, "i32.add", input0, input1, result0);
},
"end_block": function (func, instr, beginInstr) {
    Wasabi.analysis.end({func, instr}, "block", {func, instr: beginInstr});
},
"local_set_i": function (func, instr, index, value) {
    Wasabi.analysis.local({func, instr}, "local.set", index, value);
},
"i64_load32_u": function (func, instr, memIdx, offset, align, addr, value_low, value_high) {
    Wasabi.analysis.load({func, instr}, "i64.load32_u", {memIdx, addr}, {offset, align}, new Long(value_low, value_high));
},
"call_Ii": function (func, instr, targetFunc, arg0_low, arg0_high, arg1) {
    Wasabi.analysis.call_pre({func, instr}, "call", targetFunc, [new Long(arg0_low, arg0_high), arg1]);
},
"i32_ge_u": function (func, instr, input0, input1, result0) {
    Wasabi.analysis.binary({func, instr}, "i32.ge_u", input0, input1, result0);
},
"call_ii": function (func, instr, targetFunc, arg0, arg1) {
    Wasabi.analysis.call_pre({func, instr}, "call", targetFunc, [arg0, arg1]);
},
"i64_const": function (func, instr, value_low, value_high) {
    Wasabi.analysis.const_({func, instr}, "i64.const", new Long(value_low, value_high));
},
"i64_store": function (func, instr, memIdx, offset, align, addr, value_low, value_high) {
    Wasabi.analysis.store({func, instr}, "i64.store", {memIdx, addr}, {offset, align}, new Long(value_low, value_high));
},
"i32_le_u": function (func, instr, input0, input1, result0) {
    Wasabi.analysis.binary({func, instr}, "i32.le_u", input0, input1, result0);
},
"i32_store": function (func, instr, memIdx, offset, align, addr, value) {
    Wasabi.analysis.store({func, instr}, "i32.store", {memIdx, addr}, {offset, align}, value);
},
"call_i": function (func, instr, targetFunc, arg0) {
    Wasabi.analysis.call_pre({func, instr}, "call", targetFunc, [arg0]);
},
"i32_and": function (func, instr, input0, input1, result0) {
    Wasabi.analysis.binary({func, instr}, "i32.and", input0, input1, result0);
},
"begin_function_iiiii": function (func, instr, arg0, arg1, arg2, arg3, arg4) {
    Wasabi.analysis.begin_function({func, instr}, [arg0, arg1, arg2, arg3, arg4]);
},
"i32_lt_u": function (func, instr, input0, input1, result0) {
    Wasabi.analysis.binary({func, instr}, "i32.lt_u", input0, input1, result0);
},
"i32_shr_u": function (func, instr, input0, input1, result0) {
    Wasabi.analysis.binary({func, instr}, "i32.shr_u", input0, input1, result0);
},
"br_if": function (func, instr, condition, targetLabel, targetInstr) {
    Wasabi.analysis.br_if({func, instr}, {label: targetLabel, location: {func, instr: targetInstr}}, condition !== 0);
},
"i32_store8": function (func, instr, memIdx, offset, align, addr, value) {
    Wasabi.analysis.store({func, instr}, "i32.store8", {memIdx, addr}, {offset, align}, value);
},
"begin_function": function (func, instr, ) {
    Wasabi.analysis.begin_function({func, instr}, []);
},
"i32_le_s": function (func, instr, input0, input1, result0) {
    Wasabi.analysis.binary({func, instr}, "i32.le_s", input0, input1, result0);
},
"i32_load8_s": function (func, instr, memIdx, offset, align, addr, value) {
    Wasabi.analysis.load({func, instr}, "i32.load8_s", {memIdx, addr}, {offset, align}, value);
},
"i32_ne": function (func, instr, input0, input1, result0) {
    Wasabi.analysis.binary({func, instr}, "i32.ne", input0, input1, result0);
},
"i32_gt_s": function (func, instr, input0, input1, result0) {
    Wasabi.analysis.binary({func, instr}, "i32.gt_s", input0, input1, result0);
},
"i32_clz": function (func, instr, input0, result0) {
    Wasabi.analysis.unary({func, instr}, "i32.clz", input0, result0);
},
"begin_function_iiiiii": function (func, instr, arg0, arg1, arg2, arg3, arg4, arg5) {
    Wasabi.analysis.begin_function({func, instr}, [arg0, arg1, arg2, arg3, arg4, arg5]);
},
"call_indirect_iiiii": function (func, instr, tableIdx, elemIdx, arg0, arg1, arg2, arg3, arg4) {
    Wasabi.analysis.call_pre({func, instr}, "call_indirect", Wasabi.resolveTableIdx(tableIdx, elemIdx), [arg0, arg1, arg2, arg3, arg4], {tableIdx, elemIdx});
},
"call_iiii": function (func, instr, targetFunc, arg0, arg1, arg2, arg3) {
    Wasabi.analysis.call_pre({func, instr}, "call", targetFunc, [arg0, arg1, arg2, arg3]);
},
"nop": function (func, instr, ) {
    Wasabi.analysis.nop({func, instr}, );
},
"i32_eq": function (func, instr, input0, input1, result0) {
    Wasabi.analysis.binary({func, instr}, "i32.eq", input0, input1, result0);
},
"i32_mul": function (func, instr, input0, input1, result0) {
    Wasabi.analysis.binary({func, instr}, "i32.mul", input0, input1, result0);
},
"call_iiiii": function (func, instr, targetFunc, arg0, arg1, arg2, arg3, arg4) {
    Wasabi.analysis.call_pre({func, instr}, "call", targetFunc, [arg0, arg1, arg2, arg3, arg4]);
},
"call_indirect_iiii": function (func, instr, tableIdx, elemIdx, arg0, arg1, arg2, arg3) {
    Wasabi.analysis.call_pre({func, instr}, "call_indirect", Wasabi.resolveTableIdx(tableIdx, elemIdx), [arg0, arg1, arg2, arg3], {tableIdx, elemIdx});
},
"begin_function_iiii": function (func, instr, arg0, arg1, arg2, arg3) {
    Wasabi.analysis.begin_function({func, instr}, [arg0, arg1, arg2, arg3]);
},
"begin_function_iiIii": function (func, instr, arg0, arg1, arg2_low, arg2_high, arg3, arg4) {
    Wasabi.analysis.begin_function({func, instr}, [arg0, arg1, new Long(arg2_low, arg2_high), arg3, arg4]);
},
"local_get_I": function (func, instr, index, value_low, value_high) {
    Wasabi.analysis.local({func, instr}, "local.get", index, new Long(value_low, value_high));
},
"call_indirect_iIii": function (func, instr, tableIdx, elemIdx, arg0, arg1_low, arg1_high, arg2, arg3) {
    Wasabi.analysis.call_pre({func, instr}, "call_indirect", Wasabi.resolveTableIdx(tableIdx, elemIdx), [arg0, new Long(arg1_low, arg1_high), arg2, arg3], {tableIdx, elemIdx});
},
"begin_function_iiFii": function (func, instr, arg0, arg1, arg2, arg3, arg4) {
    Wasabi.analysis.begin_function({func, instr}, [arg0, arg1, arg2, arg3, arg4]);
},
"i32_xor": function (func, instr, input0, input1, result0) {
    Wasabi.analysis.binary({func, instr}, "i32.xor", input0, input1, result0);
},
"i32_popcnt": function (func, instr, input0, result0) {
    Wasabi.analysis.unary({func, instr}, "i32.popcnt", input0, result0);
},
"local_get_F": function (func, instr, index, value) {
    Wasabi.analysis.local({func, instr}, "local.get", index, value);
},
"i32_lt_s": function (func, instr, input0, input1, result0) {
    Wasabi.analysis.binary({func, instr}, "i32.lt_s", input0, input1, result0);
},
"call_indirect_iFii": function (func, instr, tableIdx, elemIdx, arg0, arg1, arg2, arg3) {
    Wasabi.analysis.call_pre({func, instr}, "call_indirect", Wasabi.resolveTableIdx(tableIdx, elemIdx), [arg0, arg1, arg2, arg3], {tableIdx, elemIdx});
},
"begin_function_iifii": function (func, instr, arg0, arg1, arg2, arg3, arg4) {
    Wasabi.analysis.begin_function({func, instr}, [arg0, arg1, arg2, arg3, arg4]);
},
"local_get_f": function (func, instr, index, value) {
    Wasabi.analysis.local({func, instr}, "local.get", index, value);
},
"i32_rotl": function (func, instr, input0, input1, result0) {
    Wasabi.analysis.binary({func, instr}, "i32.rotl", input0, input1, result0);
},
"call_indirect_ifii": function (func, instr, tableIdx, elemIdx, arg0, arg1, arg2, arg3) {
    Wasabi.analysis.call_pre({func, instr}, "call_indirect", Wasabi.resolveTableIdx(tableIdx, elemIdx), [arg0, arg1, arg2, arg3], {tableIdx, elemIdx});
},
"call": function (func, instr, targetFunc) {
    Wasabi.analysis.call_pre({func, instr}, "call", targetFunc, []);
},
"call_indirect_iii": function (func, instr, tableIdx, elemIdx, arg0, arg1, arg2) {
    Wasabi.analysis.call_pre({func, instr}, "call_indirect", Wasabi.resolveTableIdx(tableIdx, elemIdx), [arg0, arg1, arg2], {tableIdx, elemIdx});
},
"i32_ctz": function (func, instr, input0, result0) {
    Wasabi.analysis.unary({func, instr}, "i32.ctz", input0, result0);
},
"call_indirect_i": function (func, instr, tableIdx, elemIdx, arg0) {
    Wasabi.analysis.call_pre({func, instr}, "call_indirect", Wasabi.resolveTableIdx(tableIdx, elemIdx), [arg0], {tableIdx, elemIdx});
},
"begin_else": function (func, instr, ifInstr) {
    Wasabi.analysis.begin({func, instr}, "else", {func, instr: ifInstr});
},
"end_else": function (func, instr, elseInstr, ifInstr) {
    Wasabi.analysis.end({func, instr}, "else", {func, instr: elseInstr}, {func, instr: ifInstr});
},
"br_table": function (func, instr, tableIdx, brTablesInfoIdx) {
    Wasabi.analysis.br_table({func, instr}, Wasabi.module.info.brTables[brTablesInfoIdx].table, Wasabi.module.info.brTables[brTablesInfoIdx].default, tableIdx); Wasabi.endBrTableBlocks(brTablesInfoIdx, tableIdx, func);
},
"i64_load": function (func, instr, memIdx, offset, align, addr, value_low, value_high) {
    Wasabi.analysis.load({func, instr}, "i64.load", {memIdx, addr}, {offset, align}, new Long(value_low, value_high));
},
"i32_store16": function (func, instr, memIdx, offset, align, addr, value) {
    Wasabi.analysis.store({func, instr}, "i32.store16", {memIdx, addr}, {offset, align}, value);
},
"i32_ge_s": function (func, instr, input0, input1, result0) {
    Wasabi.analysis.binary({func, instr}, "i32.ge_s", input0, input1, result0);
},
"memory_grow": function (func, instr, memIdx, deltaPages, previousSizePages) {
    Wasabi.analysis.memory_grow({func, instr}, memIdx, deltaPages, previousSizePages);
},
"local_tee_I": function (func, instr, index, value_low, value_high) {
    Wasabi.analysis.local({func, instr}, "local.tee", index, new Long(value_low, value_high));
},
"i32_wrap_i64": function (func, instr, input0_low, input0_high, result0) {
    Wasabi.analysis.unary({func, instr}, "i32.wrap_i64", new Long(input0_low, input0_high), result0);
},
"i32_load16_u": function (func, instr, memIdx, offset, align, addr, value) {
    Wasabi.analysis.load({func, instr}, "i32.load16_u", {memIdx, addr}, {offset, align}, value);
},
"local_set_I": function (func, instr, index, value_low, value_high) {
    Wasabi.analysis.local({func, instr}, "local.set", index, new Long(value_low, value_high));
},
"begin_function_iiiiiii": function (func, instr, arg0, arg1, arg2, arg3, arg4, arg5, arg6) {
    Wasabi.analysis.begin_function({func, instr}, [arg0, arg1, arg2, arg3, arg4, arg5, arg6]);
},
"call_post_F": function (func, instr, result0) {
    Wasabi.analysis.call_post({func, instr}, [result0]);
},
"f64_convert_i32_u": function (func, instr, input0, result0) {
    Wasabi.analysis.unary({func, instr}, "f64.convert_i32_u", input0, result0);
},
"f64_mul": function (func, instr, input0, input1, result0) {
    Wasabi.analysis.binary({func, instr}, "f64.mul", input0, input1, result0);
},
"local_tee_F": function (func, instr, index, value) {
    Wasabi.analysis.local({func, instr}, "local.tee", index, value);
},
"f64_const": function (func, instr, value) {
    Wasabi.analysis.const_({func, instr}, "f64.const", value);
},
"f64_lt": function (func, instr, input0, input1, result0) {
    Wasabi.analysis.binary({func, instr}, "f64.lt", input0, input1, result0);
},
"f64_ge": function (func, instr, input0, input1, result0) {
    Wasabi.analysis.binary({func, instr}, "f64.ge", input0, input1, result0);
},
"i32_trunc_f64_u": function (func, instr, input0, result0) {
    Wasabi.analysis.unary({func, instr}, "i32.trunc_f64_u", input0, result0);
},
"f64_gt": function (func, instr, input0, input1, result0) {
    Wasabi.analysis.binary({func, instr}, "f64.gt", input0, input1, result0);
},
"i32_extend8_s": function (func, instr, input0, result0) {
    Wasabi.analysis.unary({func, instr}, "i32.extend8_s", input0, result0);
},
"begin_function_Ii": function (func, instr, arg0_low, arg0_high, arg1) {
    Wasabi.analysis.begin_function({func, instr}, [new Long(arg0_low, arg0_high), arg1]);
},
"i64_lt_u": function (func, instr, input0_low, input0_high, input1_low, input1_high, result0) {
    Wasabi.analysis.binary({func, instr}, "i64.lt_u", new Long(input0_low, input0_high), new Long(input1_low, input1_high), result0);
},
"i64_div_u": function (func, instr, input0_low, input0_high, input1_low, input1_high, result0_low, result0_high) {
    Wasabi.analysis.binary({func, instr}, "i64.div_u", new Long(input0_low, input0_high), new Long(input1_low, input1_high), new Long(result0_low, result0_high));
},
"i64_mul": function (func, instr, input0_low, input0_high, input1_low, input1_high, result0_low, result0_high) {
    Wasabi.analysis.binary({func, instr}, "i64.mul", new Long(input0_low, input0_high), new Long(input1_low, input1_high), new Long(result0_low, result0_high));
},
"i64_sub": function (func, instr, input0_low, input0_high, input1_low, input1_high, result0_low, result0_high) {
    Wasabi.analysis.binary({func, instr}, "i64.sub", new Long(input0_low, input0_high), new Long(input1_low, input1_high), new Long(result0_low, result0_high));
},
"i32_div_u": function (func, instr, input0, input1, result0) {
    Wasabi.analysis.binary({func, instr}, "i32.div_u", input0, input1, result0);
},
"i64_gt_u": function (func, instr, input0_low, input0_high, input1_low, input1_high, result0) {
    Wasabi.analysis.binary({func, instr}, "i64.gt_u", new Long(input0_low, input0_high), new Long(input1_low, input1_high), result0);
},
"call_iiiiiii": function (func, instr, targetFunc, arg0, arg1, arg2, arg3, arg4, arg5, arg6) {
    Wasabi.analysis.call_pre({func, instr}, "call", targetFunc, [arg0, arg1, arg2, arg3, arg4, arg5, arg6]);
},
};

module.exports = Wasabi;
